<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
    <http:listener-config name="sample-awards-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="sample-awards-config" api="resource::6f61697f-c45e-48b0-932b-ed704278dfab:sample-awards:1.0.1:oas:zip:sample-awards.yaml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <api-gateway:autodiscovery apiId="${api.id}" ignoreBasePath="true" doc:name="API Autodiscovery" doc:id="a3e2d50f-9b18-492d-a705-58019cbdeafc" flowRef="sample-awards-main" />
	<flow name="sample-awards-main">
        <http:listener config-ref="sample-awards-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <logger level="INFO" doc:name="Logger" doc:id="a852b815-30b2-4e3c-b9b4-d81b32fcd94a" message="**********RECEIVED REQUEST**********"/>
		<apikit:router config-ref="sample-awards-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\awards:sample-awards-config">
        <logger level="INFO" message="get:\awards:sample-awards-config" />
		<choice doc:name="Choice" doc:id="aefb75bc-f9ef-4a9a-8a64-353030ca91fe" >
			<when expression="#[(not isEmpty(attributes.queryParams.awardDateStart)) and (not isEmpty(attributes.queryParams.awardDateEnd))]">
				<ee:transform doc:name="Filter on Date Range and Contractor" doc:id="9aa6014c-aa66-4757-baf1-c0c6869c6d6b">
                                                <ee:message>
                                                                <ee:set-payload><![CDATA[%dw 2.0
output application/json
var awardStartDate=attributes.queryParams.awardDateStart as Date {format: "yyyy-MM-dd"}
var awardEndDate=attributes.queryParams.awardDateEnd as Date {format: "yyyy-MM-dd"}
 
---
"awards": (readUrl("classpath://ssa.hq.awards.json", "application/json")).hq_awards
filter ($.award_date as Date {format: "yyyy-MM-dd"} >= awardStartDate
and $.award_date as Date {format: "yyyy-MM-dd"} <= awardEndDate
and (lower($.contractor) startsWith lower(attributes.queryParams.contractor)))]]></ee:set-payload>
                                                </ee:message>
                                </ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Filter on Contractor" doc:id="685533d4-e8dd-4d30-b122-18539dbbe403" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
"awards": (readUrl("classpath://ssa.hq.awards.json", "application/json")).hq_awards
filter (lower($.contractor) startsWith lower(attributes.queryParams.contractor))]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
    </flow>
    <flow name="get:\awards\(contractNumber):sample-awards-config">
                                <logger level="INFO" message="get:\awards:sample-awards-config" />
		<ee:transform doc:name="vars.contractNumber" doc:id="c3becc4b-9e02-4889-a1d4-4f0ef2ef8ac2" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="contractNumber" ><![CDATA[attributes.uriParams.contractNumber]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Filter on Contract Number">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
((readUrl("classpath://ssa.hq.awards.json", "application/json")).hq_awards filter ($.contract_num == vars.contractNumber))[0] default {}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
</mule>
